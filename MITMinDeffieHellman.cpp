#include <bits/stdc++.h>
#define int long long
using namespace std;

int binpow(int a,int b,int M){
    if(b == 0) return 1;
    int p = binpow(a,b/2,M)%M;
    if(b&1) return (((p*p)%M)*a)%M; 
    return (p*p)%M;
}

signed main()
{
    int p,g;
    cout << "Enter the prime number accepted by both parties : ";
    cin >> p;
    cout << "Enter the root modulo accepted by both parties : ";
    cin >> g;

    // Private key a Alice and Bob
    int a,b;
    cout << "Enter the private key of A : ";
    cin >> a;
    cout << "Enter the private key of B: ";
    cin >> b;

    //Private key generated by Eve
    int c,d;
    cout << "Enter the private key C generated by Eve : ";
    cin >> c;
    cout << "Enter the private key D generated by Eve : ";
    cin >> d;

    // Creating public key
    int A,B;    
    A = binpow(g,a,p) % p;
    B = binpow(g,b,p) % p;

    // Both A and B are stopped to reach Bob and Alice by Eve and Eve
    // instead sends his own key

    int C,D;
    C = binpow(g,c,p) % p;
    D = binpow(g,d,p) % p;

    // Secret key generated by Alice and Bob
    int K1,K2;
    K1 = binpow(D,a,p) % p;
    K2 = binpow(C,b,p) % p;

    // Bob and Alice wonâ€™t notice any problem and may assume their communication is encrypted
    cout << "Secret Key\n" << "k1 : " << K1 << "\nk2 : " << K2 << "\n";
    return 0;
}